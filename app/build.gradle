plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

apply plugin: "io.gitlab.arturbosch.detekt"               // detekt STEP1 applying plugin (detekt = kotlin code's static analyser)
apply plugin: "checkstyle"                                // checkstyle STEP1 applying plugin (checkstyle = java code's static analyser)

// detekt STEP2 plugin configuration
detekt {
    parallel = true
    allRules = true
    ignoreFailures = true
    debug = true
}

// detekt STEP3 gradle task configuration
tasks.named("detekt").configure {
    reports {
        html.required.set(true)
        sarif.required.set(false)
        xml.required.set(false)
        txt.required.set(false)
    }
}

// checkstyle STEP2 plugin configuration
checkstyle {
    ignoreFailures false
    showViolations true
    toolVersion = "7.8.1"
}

// checkstyle STEP3 gradle task configuration
task Checkstyle(type: Checkstyle) {
    source 'src/main/java'
    ignoreFailures true
    showViolations true
    include '**/*.java'
    classpath = files()
}




android {
    namespace 'no.thDitman.tileFlipFun'
    compileSdk 32

    defaultConfig {
        applicationId "no.thDitman.tileFlipFun"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation 'androidx.compose.material:material:1.1.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"
}